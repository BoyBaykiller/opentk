<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Deterministic>true</Deterministic>
    <Nullable>enable</Nullable>
    <Description>Platform support for OpenTK, contains backends for Windows, Linux, and macOS.</Description>
    <PackageIcon>icon.png</PackageIcon>
    <IsTrimmable>true</IsTrimmable>
    <!-- 
    This is used to enable visual styles on windows so dialog windows have correct styling.
    - Noggin_bops 2024-08-01
    -->
    <ApplicationManifest>Windows\VisualStyles.manifest</ApplicationManifest>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\..\documentation\icon.png" Pack="true" PackagePath="" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\OpenTK.Core\OpenTK.Core.csproj" />
    <ProjectReference Include="..\OpenTK.Graphics\OpenTK.Graphics.csproj" />
  </ItemGroup>

  <!--
  On windows we need a manifest to be able to enable visual styles, 
  we add it both as an embedded resource aswell as an application manifest 
  in case the application manifest doesn't work.
  - Noggin_bops 2024-08-01
  -->
  <ItemGroup>
    <EmbeddedResource Include="Windows/VisualStyles.manifest">
      <LogicalName>OpenTK.Platform.Native.Windows.VisualStyles.manifest</LogicalName>
    </EmbeddedResource>
  </ItemGroup>

  <Import Project="..\..\props\nuget-common.props" />
  <!-- 
  The stylecop rules are way too overzealous about naming conventions
  and other style rules that make understandable interop code hard to write.
  As such we don't enable stylecop for OpenTK.Platform.Native.
  - Noggin_bops 2024-08-06
  -->
  <!--<Import Project="..\..\props\stylecop.props" />-->
</Project>
